# Stemly API Example .env

## Instructions
# - Copy to .env
# - Fill/edit AUTH0 fields
# - Fill/edit database authentication

## Notes
# - No env var, no default in config.py         => error: you *must* have the env var
# - No env var, default (not None) in config.py => config takes over
# - Env var, but it's empty                     => config default takes over
# - Env var, not empty                          => env var takes over

## Rule of Thumb
# If you want the variable to the present, leave the config with no default
# If you want to keep the env file small, put the default in config.py

# Tenant/environment name (e.g., dev-only, uat-sandbox etc.)
STEMLY_TENANT_NAME=

# Flask debug mode: set to 0 for production
# Alternatively, start debug mode with --debug flag
FLASK_DEBUG=0

# Custom logging with loguru
USE_LOGURU=1
# Disable if your terminal doesn't support colorized logging output
LOGURU_COLORIZE=1

# Set to true for local integration testing
STEMLY_TESTENV=false

# Authentication (none/auth0)
STEMLY_AUTH_METHOD=

# Frontend token validation
STEMLY_API_AUDIENCE=
STEMLY_JWT_ISSUER=
STEMLY_JWKS_URL=

# Swagger UI: set to true to enable, disable for production
STEMLY_DOC=

# Backend oauth API (machine-to-machine)
STEMLY_AUTH0_BASEURL=
STEMLY_AUTH0_AUDIENCE=
STEMLY_AUTH0_CLIENT_ID=
STEMLY_AUTH0_CLIENT_SECRET=
STEMLY_AUTH0_USERNAME=
STEMLY_AUTH0_PASSWORD=

# Postgres
POSTGRES_DB=stemly
POSTGRES_USER=stemly
POSTGRES_PASSWORD=stemly

# Clickhouse
# Set password hash in users.xml and set password here
CLICKHOUSE_PSWD=password

# Alternatively, set SQLALCHEMY_DATABASE_URI below (overrides above)
# SQLALCHEMY_DATABASE_URI=postgresql+psycopg2://stemly:stemly@localhost:5400/stemly

# Cloud Storage (azure, google, azurite)
CLOUD_STORAGE_PROVIDER=azurite

# Azure Blob Storage (if above is azure)
AZURE_STORAGE_ACCOUNT=
AZURE_STORAGE_KEY=
AZURE_STORAGE_CONTAINER=

# Google Cloud Storage (if above is google)
GOOGLE_CREDENTIALS_PATH=
GOOGLE_BUCKET_NAME=
GOOGLE_PROJECT_NAME=

# Azurite Storage Emulator (if above is azurite)
# Credentials from: https://github.com/azure/azurite#default-storage-account
AZURITE_ACCOUNT=devstoreaccount1
AZURITE_KEY=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==
AZURITE_CONTAINER=appdata
AZURITE_HOST=127.0.0.1
AZURITE_PORT=10000

# Dynamic API for DMO Extract
# e.g.: http://localhost:5000/api/stemly_data_management/vds2gcs/
API_FOR_EXTRACT=

# Stemly Data Science API (MLFLOW) Service Experiment API
# For defaults see config.py
STEMLY_DATA_SCIENCE_API=
STEMLY_DATA_SCIENCE_API_VERSION=v.0.1

# Optimization API
STEMLY_OPT_API=http://localhost:8002

# Airflow / Composer
GOOGLE_COMPOSER_BUCKET_NAME=
DAG_SERVICE_ACCOUNT_JSON_PATH=
SNAPLOGIC_STARTER_URL=
SNAPLOGIC_UPLOAD_URL=
SNAPLOGIC_ORG=
SNAPLOGIC_PROJECT=
SNAPLOGIC_AUTH_TOKEN=
SNAPLOGIC_CLIENT_ID=
SNAPLOGIC_CLIENT_SECRET=
STEMLY_COMPOSER_AUTH0_CLIENT_ID=
STEMLY_COMPOSER_AUTH0_CLIENT_SECRET=
SNAPLOGIC_AUTH_TOKEN_PRE=

# ELASTIC SEARCH / OPEN DISTRO SERVICE
ELASTIC_SEARCH_SCHEME=https
ELASTIC_SEARCH_URL=localhost
ELASTIC_SEARCH_PORT=9200
ELASTIC_SEARCH_AUTH_USER=admin
ELASTIC_SEARCH_AUTH_PASSWORD=admin

AIRFLOW_BASEURL = 'http://localhost:8080/'
AIRFLOW_USERNAME = 'admin'
AIRFLOW_PASSWORD = 'admin'
